{
  "uuid": "b6da7dc5-57b5-4c19-b4e3-5b140df8b08e",
  "author": "Toon Ketels",
  "title": "Extend Fail2ban to send text messages every time a user/bot gets banned",
  "alias": "fail2ban-send-sms-user-banned",
  "type": "article",
  "tags": [
    "fail2ban",
    "Twilio"
  ],
  "content": "<p>To prevent scripts from brute forcing their way into my VPS via SSH I use <a href=\"http://www.fail2ban.org\">Fail2ban</a>. It&#39;s a tool that checks the logs for password failures and set IP rules that blocks that user&#39;s IP for a given time.</p>\n<p>I have it already set up to send emails (one of the default actions), but I wanted it to send me a text message every time an IP gets banned.</p>\n<p>Fail2ban does not ship with such an action. Fortunately, it&#39;s not hard to create one.</p>\n<h2>How to extend fail2ban with custom actions?</h2>\n<p>It&#39;s easy to extend Fail2ban with custom actions. You only need to do two things:\n1. Create a new action in the /etc/fail2/ban/actions.d directory\n2. Configure jail.local to use that action</p>\n<h2>Create new action in actions.d</h2>\n<p>The easiest way to create a new action is to copy dummy.conf to <em>new-action.conf</em> and edit it. You&#39;ll find the different &quot;hooks&quot; you can use to execute your commands. Variables are passed via &quot;&lt;variable&gt;&quot; syntax.</p>\n<p>Below you&#39;ll find my sms.conf.</p>\n<pre><code>#\n# Author: Toon Ketels\n#\n# $Revision$\n#\n\n[Definition]\n\n# Option:  actionstart\n# Notes.:  command executed once at the start of Fail2Ban.\n# Values:  CMD\n#\nactionstart = /home/all/scripts/fail2ban-sms.sh start\n\n# Option:  actionstop\n# Notes.:  command executed once at the end of Fail2Ban\n# Values:  CMD\n#\nactionstop = /home/all/scripts/fail2ban-sms.sh stop\n\n# Option:  actioncheck\n# Notes.:  command executed once before each actionban command\n# Values:  CMD\n#\nactioncheck =\n\n# Option:  actionban\n# Notes.:  command executed when banning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    &lt;ip>  IP address\n#          &lt;failures>  number of failures\n#          &lt;time>  unix timestamp of the ban time\n# Values:  CMD\n#\nactionban = /home/all/scripts/fail2ban-sms.sh ban &lt;ip>\n\n# Option:  actionunban\n# Notes.:  command executed when unbanning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    &lt;ip>  IP address\n#          &lt;failures>  number of failures\n#          &lt;time>  unix timestamp of the ban time\n# Values:  CMD\n#\nactionunban = /home/all/scripts/fail2ban-sms.sh unban &lt;ip>\n\n[Init]\n\ninit = 'Custom startup message</code></pre>\n<p>Above you see we don&#39;t actually send text messages directly from within this file, but invoke the script located at /home/all/scripts/fail2ban-sms.sh. We use the &lt;ip&gt; variable to be send in the text message and pass it as an argument to the script. </p>\n<p>Using scripts makes it easier to change the texting implementation later on (or when we would like to change provider).</p>\n<p>Before we look into the text messaging script, let&#39;s activate the command.</p>\n<h2>Config fail.local to execute action</h2>\n<p>Configure Fail2ban by copying jail.conf to jail.local and edit the file. We want texting whenever someone tries to bruteforce ssh. So we add &quot;sms&quot; to the list of actions in the ssh section like below.</p>\n<pre><code>#\n# in /etc/fail2ban/jail.local.\n#\n# Optionally you may override any other parameter (e.g. banaction,\n# action, port, logpath, etc) in that section within jail.local\n\n[ssh]\n\nenabled  = true\nport     = ssh\nfilter   = sshd\nlogpath  = /var/log/auth.log\nmaxretry = 6\naction = mail-whois[name=SSH, dest=my.email@gmail.com]\n         sms</code></pre>\n<h2>Texting using twilio</h2>\n<p><a href=\"https://www.twilio.com/\">Twilio&#39;s API</a> makes it easy to send sms&#39;s. Just POST to their api to text. Below you find the script used to perform the request to their API.</p>\n<pre><code>#!/bin/bash\n\n# Sends text messages using twilio api\n# to alert webmaster of banning.\n#\n# Requires one argument, one of the following:\n#  start\n#  stop\n#  ban\n#  unban\n#\n# Optional second argument: IP for ban/unban\n\n\n\n# Include file with the following content:\n#   sid=&lt;twilio account sid>\n#   token=&lt;twilio auth token>\n#   from=&lt;phone number>\n#   to=&lt;phone number>\nsource secret.conf\n\n\n\n# Display usage information\nfunction show_usage {\n  echo \"Usage: $0 action &lt;ip>\"\n  echo \"Where action is start, stop, ban, unban\"\n  echo \"and ip is optional passed to ban, unban\"\n  exit\n}\n\n\n\n# Actually send sms\n# Expects the sms content (body) to be passed\n# as argument.\nfunction send_sms {\n  /usr/bin/curl -X POST \"https://api.twilio.com/2010-04-01/Accounts/$sid/SMS/Messages.json\" -d \"From=$from\" -d \"To=$to\" -d \"Body=$1\" -u \"$sid:$token\" >> '/home/all/log/fail2ban-sms.log'    \n  exit\n}\n\n\n\n# Check for script arguments\nif [ $# -lt 1 ]\nthen\n  show_usage\nfi\n\n\n\n# Take action depending on argument\nif [ \"$1\" = 'start' ]\nthen\n  message='Fail2ban+just+started.'\n  send_sms $message\nelif [ \"$1\" = 'stop' ]\nthen\n  message='Fail2ban+just+stopped.'\n  send_sms $message\nelif [ \"$1\" = 'ban' ]\nthen\n  message=$([ \"$2\" != '' ] &amp;&amp; echo \"Fail2ban+just+banned+$2\" || echo 'Fail2ban+just+banned+an+ip.' )\n  send_sms $message\nelif [ \"$1\" = 'unban' ]\nthen\n  message=$([ \"$2\" != '' ] &amp;&amp; echo \"Fail2ban+just+unbanned+$2\" || echo \"Fail2ban+just+unbanned+an+ip.\" )\n  send_sms $message\nelse\n  show_usage</code></pre>\n<p>The script expects a secret.conf in the same directory to read the Twilio authentication data and phone numbers from. The output of the requests are appended to a logfile in /home/all/log/fail2ban-sms.log.</p>\n<h2>Repo</h2>\n<p>You find the config file and script in <a href=\"https://github.com/toonketels/fail2ban-sms\">github repo</a>.</p>\n<h2>Resources</h2>\n<ul>\n<li><a href=\"http://www.fail2ban.org\">www.fail2ban.org</a></li>\n<li><a href=\"https://www.twilio.com\">www.twilio.com</a></li>\n<li><a href=\"https://github.com/toonketels/fail2ban-sms\">github.com/toonketels/fail2ban-sms</a></li>\n<li><a href=\"http://blog.redbranch.net/2013/02/28/fail2ban-custom-action\">blog.redbranch.net/2013/02/28/fail2ban-custom-action</a></li>\n</ul>\n",
  "teaser": "<p>To prevent scripts from brute forcing their way into my VPS via SSH I use <a href=\"http://www.fail2ban.org\">Fail2ban</a>. It&#39;s a tool that checks the logs for password failures and set IP rules that blocks that user&#39;s IP for a giv...</p>",
  "createDate": "2013-03-23T00:00:00+01:00",
  "updateDate": "2013-03-23T00:00:00+01:00",
  "createDateFormatted": "2013.03.23",
  "updateDateFormatted": "2013.03.23",
  "createDateTimestamp": "1363993200",
  "updateDateTimestamp": "1363993200"
}